name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set GCC & G++ 10 compiler (on Linux)
      if: runner.os == 'Linux'
      run: echo "CC=gcc-10" >> $GITHUB_ENV && echo "CXX=g++-10" >> $GITHUB_ENV
    - uses: actions/setup-python@v2

    - uses: ilammy/setup-nasm@v1
      with:
        version: 2.15.05
    - uses: seanmiddleditch/gha-setup-ninja@v3
    - run: pip install meson
    - name: Build aom
      working-directory: ./ext
      run: bash aom.cmd
    - name: Build dav1d
      working-directory: ./ext
      run: bash dav1d.cmd
    - name: Build rav1e
      working-directory: ./ext
      run: bash rav1e.cmd
    - name: Build libgav1
      working-directory: ./ext
      run: bash libgav1.cmd
    - name: Build libyuv
      working-directory: ./ext
      run: bash libyuv.cmd

    - name: Prepare libavif (cmake)
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DAVIF_CODEC_AOM=ON -DAVIF_LOCAL_AOM=ON -DAVIF_CODEC_DAV1D=ON -DAVIF_LOCAL_DAV1D=ON -DAVIF_CODEC_RAV1E=ON -DAVIF_LOCAL_RAV1E=ON -DAVIF_CODEC_LIBGAV1=ON -DAVIF_LOCAL_LIBGAV1=ON -DAVIF_LOCAL_LIBYUV=ON -DAVIF_BUILD_TESTS=1
    - name: Build libavif (make)
      working-directory: ./build
      run: make -j $(($(nproc) + 1))
    - name: Run AVIF Tests (on Linux)
      if: runner.os == 'Linux'
      working-directory: ./build
      run: ./aviftest ../tests/data
